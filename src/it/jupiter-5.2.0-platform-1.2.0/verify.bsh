import java.io.*;
import java.util.*;
import java.nio.file.*;

//
// Expectations
//

String[] nonEmptyFiles = new String[] {
  "target/test-classes/Tests.class",
  "target/junit-platform-console-launcher.out.txt"
};

String[] emptyFiles = new String[] {
  "target/junit-platform-console-launcher.err.txt"
};

String log = new String(Files.readAllBytes(basedir.toPath().resolve("build.log")), "UTF-8");
String[] logSnippets = new String[] {
  "[INFO] Launching JUnit Platform...",
  "[INFO] Test run finished",
  "[INFO] [         2 containers found      ]",
  "[INFO] [         0 containers skipped    ]",
  "[INFO] [         2 containers started    ]",
  "[INFO] [         0 containers aborted    ]",
  "[INFO] [         2 containers successful ]",
  "[INFO] [         0 containers failed     ]",
  "[INFO] [         1 tests found           ]",
  "[INFO] [         0 tests skipped         ]",
  "[INFO] [         1 tests started         ]",
  "[INFO] [         0 tests aborted         ]",
  "[INFO] [         1 tests successful      ]",
  "[INFO] [         0 tests failed          ]",
  "[INFO] BUILD SUCCESS"
};

//
// Verification
//

boolean ok = true;

System.out.println("\nVerifying non-empty files...");
for (String name : nonEmptyFiles) {
  Path path = basedir.toPath().resolve(name);
  if (!Files.isReadable(path)) {
    System.out.println("Expected file not found: " + path);
    ok = false;
    continue;
  }
  long size = Files.size(path);
  if (size == 0) {
    System.err.println("Expected file to be empty: " + path + " -> " + size + " bytes");
    ok = false;
    continue;
  }
  System.out.println(path + " exists and is not empty: " + size + " bytes");
}

System.out.println("\nVerifying empty files...");
for (String name : emptyFiles) {
  if (Files.size(basedir.toPath().resolve(name)) != 0) {
    System.err.println("Expected empty file: " + name);
    ok = false;
  }
}

System.out.println("\nVerifying log snippets...");
for (String snippet : logSnippets) {
  if (!log.contains(snippet)) {
    System.err.println("Expected snippet in log not found: " + snippet);
    ok = false;
  }
}

return ok;
